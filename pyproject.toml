[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "dram2_viz"
description = "A library for visualizing the output of DRAM2"
readme = "README.md"
authors = [
    {name = "Madeline Scyphers", email = "mescyphers@gmail.com"},
    {name = "Rory Flynn"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]
dynamic = ["version"]

dependencies = [
    'bokeh >=3.0,<4.0',
    'panel >=1.0,<2.0',
    'click <9.0',
    'numpy <2.0',
    'networkx >=2,<3',
    'param >=2.0,<3.0',
    'panel-jstree >=0.3.5,<0.4.0',
    'pandas >=1.2,<3.0',
]

[project.urls]
"Source Code" = "https://github.com/WrightonLabCSU/dram2_viz"
"Bug Tracker" = "https://github.com/WrightonLabCSU/dram2_viz/issues"


[project.optional-dependencies]
dev = [
    'pytest',
    'pytest-cov',
    'black',
    'isort',
    'flake8',
    'flakeheaven >=3.0.0'
]

[tool.setuptools.packages.find]
include = ["dram2_viz*"]

[tool.setuptools_scm]
write_to = "dram2_viz/_version.py"

[tool.isort]
profile = "black"
multi_line_output = 3
py_version = 311
skip_glob = ["*env*/*"]

[tool.black]
line-length = 120
# These are regular expressions (hence the \. is escaping the ., and not a literal \.)
exclude = '''
(
    /(\.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | .*env.*
    | _build
    | buck-out
    | build
    | dist
    | _version.py
    )
)
'''

[tool.flakeheaven]
# 80 chars aren't enough in 21 century
max_line_length = 120
# show line of source code in output
show_source = true

exclude = [
    "scratch",
    ".git",
    "__pycache__",
    "docs",
    "build",
    "dist",
    "tests",
    "venv"
]

# list of plugins and rules for them
[tool.flakeheaven.plugins]
pyflakes = ["+*"]
# all pycodestyle except line break before binary operator because we use binary break after line break as recommended
# And ignore module level imports not at top of file because of jupyter notebook examples
pycodestyle = ["+*", "-W503", "-E402"]

# pytest settings
[tool.pytest.ini_options]
addopts = "--doctest-modules --doctest-glob='*.rst'"
doctest_optionflags = "NORMALIZE_WHITESPACE"
norecursedirs = "_build"
filterwarnings = ["ignore::DeprecationWarning:invoke"]

# coverage settings
[tool.coverage.run]
branch = true
# patterns of files to exclude from coverage
omit = [
    "_version.py",
    "__init__.py",
    "__main__.py",
    "definitions.py"
    ]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",

    # Ignore imports
    "from",
    "import",

    # ignore getting logger
    "logger = logging",
    ]
